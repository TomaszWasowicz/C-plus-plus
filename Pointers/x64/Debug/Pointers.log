  Changing what a pointer parameter points at.cpp
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\Changing what a pointer parameter points at.cpp(3,15): warning C5030: atrybut „maybe_unusued” nie został rozpoznany
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\Changing what a pointer parameter points at.cpp(3,15): warning C5222: „maybe_unusued”: wszystkie nazwy atrybutów nienależące do zakresu są zarezerwowane na potrzeby przyszłej standaryzacji
  const pointer.cpp
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\const pointer.cpp(11,13): error C2373: "ptr": zmiana definicji; różne typy modyfikatorów
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\const pointer.cpp(7,13): message : zobacz deklarację „ptr”
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\const pointer.cpp(19,19): error C2373: "ptr2": zmiana definicji; różne typy modyfikatorów
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\const pointer.cpp(18,13): message : zobacz deklarację „ptr2”
  dereference operator.cpp
  dont return non-const static variables by reference.cpp
  NUll pointers.cpp
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\NUll pointers.cpp(18,5): error C2660: "someFunction": funkcja nie przyjmuje 1 argumentów
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\NUll pointers.cpp(3,6): message : zobacz deklarację „someFunction”
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\NUll pointers.cpp(18,5): message : podczas próby dopasowania listy argumentów "(nullptr)"
  Pass by adress allows the function to modify the arguments value.cpp
  pass by adress by reference.cpp
  Pass by adress can't take rvalues.cpp
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\Pass by adress can't take rvalues.cpp(23,20): error C2101: "&" w stałej
  Pass by adress.cpp
  Pass by reference can't dereference nullptr.cpp
  Passs by address for optional arguments.cpp
  pointers to const value.cpp
  reference and pointer behaviour -changing what reference and pointer points at.cpp
  Return by adress.cpp
  Return by reference - it is ok to return parameters by reference.cpp
  Return by reference - static const variable is a must.cpp
  Return by reference - the caller can modify values through the reference.cpp
  return by reference - why 0 or NULL is no longer preferrred.cpp
  std nullptr.cpp
  The difference between auto and auto pointer.cpp
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\The difference between auto and auto pointer.cpp(8,15): error C3535: nie można wyprowadzić typu dla "auto *" z "std::string"
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\The difference between auto and auto pointer.cpp(8,15): error C2440: "inicjowanie": nie można konwertować z "std::string" na "int *"
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\The difference between auto and auto pointer.cpp(8,15): message : Przyczyna: nie można skonwertować z "std::string" na "int *"
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\The difference between auto and auto pointer.cpp(8,17): message : Nie jest dostępny żaden operator konwersji zdefiniowany przez użytkownika, który mógłby wykonać tę konwersję lub operator nie może zostać wywołany
  Generowanie kodu...
  Trwa kompilowanie...
  The size of pointers.cpp
  top level i low level const.cpp
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(1,11): error C2734: „x”: obiekt const musi zostać zainicjowany, jeśli nie jest obiektem extern
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(2,15): error C2734: „ptr”: obiekt const musi zostać zainicjowany, jeśli nie jest obiektem extern
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(4,15): error C2530: "ref": odwołania muszą być zainicjowane
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(5,12): error C2373: "ptr": zmiana definicji; różne typy modyfikatorów
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(2,12): message : zobacz deklarację „ptr”
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(7,21): error C2734: „ptr”: obiekt const musi zostać zainicjowany, jeśli nie jest obiektem extern
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(7,18): error C2373: "ptr": zmiana definicji; różne typy modyfikatorów
C:\Users\benz_\Source\Repos\Nauka-Cpp\Pointers\top level i low level const.cpp(2,12): message : zobacz deklarację „ptr”
  Type deduction and const references.cpp
  Type deduction with pointers, references and const - droping references.cpp
  Type deduction with pointers.cpp
  Generowanie kodu...
